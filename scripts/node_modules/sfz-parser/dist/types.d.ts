export interface Opcodes {
    sample: string;
    lochan?: number;
    hichan?: number;
    lokey?: number;
    hikey?: number;
    key?: number;
    lovel?: number;
    hivel?: number;
    loccN?: number;
    hiccN?: number;
    lobend?: number;
    hibend?: number;
    lochanaft?: number;
    hichanaft?: number;
    lopolyaft?: number;
    hipolyaft?: number;
    lorand?: number;
    hirand?: number;
    lobpm?: number;
    hibpm?: number;
    seq_length?: number;
    seq_position?: number;
    sw_lokey?: number;
    sw_hikey?: number;
    sw_last?: number;
    sw_down?: number;
    sw_up?: number;
    sw_previous?: number;
    sw_vel?: string;
    trigger?: number;
    group?: number;
    off_by?: number;
    off_mode?: string;
    on_loccN?: number;
    on_hiccN?: number;
    delay?: number;
    delay_random?: number;
    delay_ccN?: number;
    offset?: number;
    offset_random?: number;
    offset_ccN?: number;
    end?: number;
    count?: number;
    loop_mode?: string;
    loop_start?: number;
    loop_end?: number;
    sync_beats?: number;
    sync_offset?: number;
    transpose?: number;
    tune?: number;
    pitch_keycenter?: number;
    pitch_keytrack?: number;
    pitch_veltrack?: number;
    pitch_random?: number;
    bend_up?: number;
    bend_down?: number;
    bend_step?: number;
    pitcheg_delay?: number;
    pitcheg_start?: number;
    pitcheg_attack?: number;
    pitcheg_hold?: number;
    pitcheg_decay?: number;
    pitcheg_sustain?: number;
    pitcheg_release?: number;
    pitcheg_depth?: number;
    pitcheg_vel2delay?: number;
    pitcheg_vel2attack?: number;
    pitcheg_vel2hold?: number;
    pitcheg_vel2decay?: number;
    pitcheg_vel2sustain?: number;
    pitcheg_vel2release?: number;
    pitcheg_vel2depth?: number;
    pitchlfo_delay?: number;
    pitchlfo_fade?: number;
    pitchlfo_freq?: number;
    pitchlfo_depth?: number;
    pitchlfo_depthccN?: number;
    pitchlfo_depthchanaft?: number;
    pitchlfo_depthpolyaft?: number;
    pitchlfo_freqccN?: number;
    pitchlfo_freqchanaft?: number;
    pitchlfo_freqpolyaft?: number;
    fil_type?: string;
    cutoff?: number;
    cutoff_ccN?: number;
    cutoff_chanaft?: number;
    cutoff_polyaft?: number;
    resonance?: number;
    fil_keytrack?: number;
    fil_keycenter?: number;
    fil_veltrack?: number;
    fil_random?: number;
    fileg_delay?: number;
    fileg_start?: number;
    fileg_attack?: number;
    fileg_hold?: number;
    fileg_decay?: number;
    fileg_sustain?: number;
    fileg_release?: number;
    fileg_depth?: number;
    fileg_vel2delay?: number;
    fileg_vel2attack?: number;
    fileg_vel2hold?: number;
    fileg_vel2decay?: number;
    fileg_vel2sustain?: number;
    fileg_vel2release?: number;
    fileg_vel2depth?: number;
    fillfo_delay?: number;
    fillfo_fade?: number;
    fillfo_freq?: number;
    fillfo_depth?: number;
    fillfo_depthccN?: number;
    fillfo_depthchanaft?: number;
    fillfo_depthpolyaft?: number;
    fillfo_freqccN?: number;
    fillfo_freqchanaft?: number;
    fillfo_freqpolyaft?: number;
    volume?: number;
    pan?: number;
    width?: number;
    position?: number;
    amp_keytrack?: number;
    amp_keycenter?: number;
    amp_veltrack?: number;
    amp_velcurve_1?: number;
    amp_velcurve_127?: number;
    amp_random?: number;
    rt?: number;
    output?: number;
    gain_ccN?: number;
    xfin_lokey?: number;
    xfin_hikey?: number;
    xfout_lokey?: number;
    xfout_hikey?: number;
    xf_keycurve?: string;
    xfin_lovel?: number;
    xfin_hivel?: number;
    xfout_lovel?: number;
    xfout_hivel?: number;
    xf_velcurve?: string;
    xfin_loccN?: number;
    xfin_hiccN?: number;
    xfout_loccN?: number;
    xfout_hiccN?: number;
    xf_cccurve?: string;
    ampeg_delay?: number;
    ampeg_start?: number;
    ampeg_attack?: number;
    ampeg_hold?: number;
    ampeg_decay?: number;
    ampeg_sustain?: number;
    ampeg_release?: number;
    ampeg_vel2delay?: number;
    ampeg_vel2attack?: number;
    ampeg_vel2hold?: number;
    ampeg_vel2decay?: number;
    ampeg_vel2sustain?: number;
    ampeg_vel2release?: number;
    ampeg_delayccN?: number;
    ampeg_startccN?: number;
    ampeg_attackccN?: number;
    ampeg_holdccN?: number;
    ampeg_decayccN?: number;
    ampeg_sustainccN?: number;
    ampeg_releaseccN?: number;
    amplfo_delay?: number;
    amplfo_fade?: number;
    amplfo_freq?: number;
    amplfo_depth?: number;
    amplfo_depthccN?: number;
    amplfo_depthchanaft?: number;
    amplfo_depthpolyaft?: number;
    amplfo_freqccN?: number;
    amplfo_freqchanaft?: number;
    amplfo_freqpolyaft?: number;
    eq1_freq?: number;
    eq2_freq?: number;
    eq3_freq?: number;
    eq1_freqccN?: number;
    eq2_freqccN?: number;
    eq3_freqccN?: number;
    eq1_vel2freq?: number;
    eq2_vel2freq?: number;
    eq3_vel2freq?: number;
    eq1_bw?: number;
    eq2_bw?: number;
    eq3_bw?: number;
    eq1_bwccN?: number;
    eq2_bwccN?: number;
    eq3_bwccN?: number;
    eq1_gain?: number;
    eq2_gain?: number;
    eq3_gain?: number;
    eq1_gainccN?: number;
    eq2_gainccN?: number;
    eq3_gainccN?: number;
    eq1_vel2gain?: number;
    eq2_vel2gain?: number;
    eq3_vel2gain?: number;
    effect1?: number;
    effect2?: number;
}
export declare type SfzHeaders = 'region' | 'group' | 'control' | 'global' | 'curve' | 'effect' | 'master' | 'midi' | 'sample';
export interface SfzSection {
    type: SfzHeaders;
    property: Opcodes;
}
export interface SfzRegion extends Opcodes {
}
